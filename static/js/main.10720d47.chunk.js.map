{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectTodo","setSelectTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setFilter","setQuery","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","userData","finally","href","email","name","App","isLoadTodos","setIsLoadTodos","setTodos","filter","todosVisible","todosCopy","toLowerCase","includes","Error","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10720d47.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: Todo | null,\n  setSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  setSelectTodo,\n}) => (\n\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye-slash': selectTodo?.id === todo.id,\n                      'fa-eye': selectTodo?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string,\n  setFilter: (value: Status) => void,\n  setQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setFilter,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilter(event.target.value as Status)}\n        >\n          <option value={Status.All}>All</option>\n          <option value={Status.Active}>Active</option>\n          <option value={Status.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectTodo: Todo,\n  setSelectTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  setSelectTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(selectTodo.userId)\n      .then(userData => setUser(userData))\n      .finally(() => setIsLoading(false));\n  }, [selectTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo.id}`}\n            </div>\n            {selectTodo && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectTodo(null)}\n              />\n            )}\n\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {`${selectTodo.title}`}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className=\"has-text-danger\">\n                {selectTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [isLoadTodos, setIsLoadTodos] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<Status>(Status.All);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoadTodos(true);\n    getTodos().then(setTodos).finally(() => setIsLoadTodos(false));\n  }, []);\n\n  const filterTodos = () => {\n    let todosCopy = [...todos];\n\n    if (query) {\n      todosCopy = todosCopy\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    switch (filter) {\n      case Status.Active:\n        todosCopy = todosCopy.filter(todo => !todo.completed);\n        break;\n      case Status.Completed:\n        todosCopy = todosCopy.filter(todo => todo.completed);\n        break;\n      case Status.All:\n        break;\n      default:\n        throw new Error('not filter');\n    }\n\n    return todosCopy;\n  };\n\n  const todosVisible:Todo[] = filterTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setFilter={setFilter}\n                setQuery={setQuery}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todosVisible}\n                    selectTodo={selectTodo}\n                    setSelectTodo={setSelectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodo && (\n        <TodoModal\n          selectTodo={selectTodo}\n          setSelectTodo={setSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}